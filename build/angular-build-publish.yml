parameters:
  opcWebAppArtifactName: ''

steps:
  # Angular build
  - task: NodeTool@0
    displayName: 'Install Node.js'
    inputs:
      versionSpec: '16.18.0'

  - script: |
      npm install -g @angular/cli@16.2.0
    displayName: 'cli i'
    workingDirectory: '$(Build.SourcesDirectory)/ClientApp'

  - script: |
      npm install
    displayName: 'npm i'
    workingDirectory: '$(Build.SourcesDirectory)/ClientApp'

  - script: |
      ng build
    displayName: 'ng build'
    workingDirectory: '$(Build.SourcesDirectory)/ClientApp' # D:\a\1\s

  # - script: |
  #     rm -f $(Pipeline.Workspace)/**/$(opcWebAppArtifactName).zip
  #   displayName: 'Cleanup old artifacts'

  - task: ArchiveFiles@2
    displayName: 'Archive files'
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)/ClientApp/dist/opc-chart' #D:\a\1\s\ClientApp
      includeRootFolder: false
      archiveType: zip
      archiveFile: $(Build.ArtifactStagingDirectory)/$(opcWebAppArtifactName).zip
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(opcWebAppArtifactName).zip'
      ArtifactName: 'drop'
      publishLocation: 'Container'

  # - script: |
  #     ls -al $(Build.ArtifactStagingDirectory)
  #   displayName: 'Check Artifact Staging Directory'
