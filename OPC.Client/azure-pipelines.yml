# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  opcApiArtifactName: 'QIA_OpcAPI'
  opcWebAppArtifactName: 'QIA_OpcWebApp'
  AzureSubscription: 'DataLakeDEV-dev-qia-dm-weu-rg'
  ResourceGroupName: 'dev-qia-dm-sandbox-weu-rg'
  OpcApiServiceName: 'dev-qia-opc-api-weu-app'
  OpcWebAppServiceName: 'dev-qia-opc-api-weu-app'

stages:
- stage: Build
  jobs:
  - job: BuildAndPublish
    displayName: 'Build and Publish Job'
    steps:
    - checkout: self
      fetchDepth: 0

# .NET restore, build, and test
    - template: templates/restore-build-test.yml

# .net publish
    - task: DotNetCoreCLI@2
      displayName: 'Dotnet Publish API'
      inputs:
        command: 'publish'
        projects: '**/QIA.Opc.API.csproj'
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(opcApiArtifactName) --no-build'
        zipAfterPublish: True
        publishWebProjects: false
        modifyOutputPath: false
    - publish: $(Build.ArtifactStagingDirectory)/$(opcApiArtifactName)
      artifact: $(opcApiArtifactName)


- stage: DeployDEV
  displayName: 'Deploy to DEV Stage'
  jobs:

# deploy API
    - deployment: DeployApi
      displayName: 'Deploy $(opcApiArtifactName)'
      environment:
        name: 'QIAOpc_DEV'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: AzureWebApp@1
                displayName: 'Deploy to Azure Web App'
                inputs:
                  azureSubscription: '$(AzureSubscription)'
                  appType: 'webApp'
                  appName: '$(OpcApiServiceName)'
                  package: '$(Pipeline.Workspace)/**/*.zip'

